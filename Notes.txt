~ Exposing exceptions is not good , so make sure you handle it well in your backend code

~ Global catches are put in end to handle the exceptions
  they are middlewares
  they are put in end
  they have 4 params (err,req,res,next)

~ We can Pass data from one middleware to another 
  One ugly way to do so is shove everything into req   

~ Zod is basically used for user validation   

~ Hashing  - 1 Way , PW is stored in some gibberish and then our pw is converted into same and is matched
  Encryption - 2 Way (key is needed) PW is encrypted and is decrypted back 
  JWT (Json Web token)  converts our json into a string and anyone who has this string can actually seee the  input , Anyone can decode the string but only who have the PW can verify 
  Local Storage - When user login , a jwt is created and is stored in local storage and is relayed in every request

 ~ JWT Token can be stored in either :
    Cookies ( preferable way )
    Local Storage 

~Debouncing - Delay calling the API many times , instead just call fewer times with a time gap

~Throttling = When Client request too much , so we can handle it like we do in debouncing

~ Error handling middleware ,takes 4 args (err,req,res,next)